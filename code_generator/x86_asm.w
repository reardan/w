import code_generator.code_emitter


void sym_define_declare_global_function(char* name); /* defined in symbol_table */

void define_asm_functions():
	sym_define_declare_global_function("syscall")
	/* mov eax,[esp+16] ; mov ebx,[esp+12] ; mov ecx,[esp+8] ; mov edx,[esp+4] ; int 0x80 ; ret */
	emit(19, "\x8b\x44\x24\x10\x8b\x5c\x24\x0c\x8b\x4c\x24\x08\x8b\x54\x24\x04\xcd\x80\xc3")

	sym_define_declare_global_function("syscall7")
	/* mov eax,[esp+28] ; mov ebx,[esp+24] ; mov ecx,[esp+20] ; mov edx,[esp+16] ; mov esi,[esp+12] ; mov edi,[esp+8] ; mov ebp,[esp+4] ; int 0x80 ; ret */
	emit(20, "\x8b\x44\x24\x1c\x8b\x5c\x24\x18\x8b\x4c\x24\x14\x8b\x54\x24\x10\x8b\x74\x24\x0c")
	emit(10, "\x89\x68\x14\x89\x70\x18\x89\x78\x1c\xc3")

	# debug
	sym_define_declare_global_function("get_context")
	# push eax; mov eax,[esp+8] ; mov [eax+4],ecx ; pop ecx ; mov [eax+0],ecx ; mov [eax+8],edx ; mov [eax+12],ebx; mov [eax+16],esp ; mov [eax+20], ebp ; mov [eax+24], esi ; mov [eax+28],edi ; ret
	emit(20, "\x50\x8b\x44\x24\x08\x89\x48\x04\x59\x89\x08\x89\x50\x08\x89\x58\x0c\x89\x60\x10")
	emit(10, "\x89\x78\x14\x89\x70\x18\x89\x78\x1c\xc3")

	# push eax ; mov eax,[esp+8] ; mov [eax+4],ecx ; mov [eax+8],edx ; mov [eax+12],ebx ; mov [eax+16],esp ; mov [eax+20],ebp ; mov [eax+24],esi ; mov [eax+28],edi ; pop eax ; ret ; 
	sym_define_declare_global_function("store_context")
	emit(20, "\x50\x8b\x44\x24\x08\x89\x48\x04\x89\x50\x08\x89\x58\x0c\x89\x60\x10\x89\x68\x14")
	emit(9, "\x89\x70\x18\x89\x78\x1c\x58\xc3")

	# endian
	sym_define_declare_global_function("swap_endian")
	emit(7, "\x8b\x44\x24\x04\x0f\xc8\xc3")

	sym_define_declare_global_function("swap_endian16")
	emit(11, "\x8b\x44\x24\x04\x0f\xc8\xb1\x10\xd3\xfb\xc3")

	# tcp.asm
	sym_define_declare_global_function("socket_connect")
	emit(52, "\xb8\x66\x00\x00\x00\xbb\x01\x00\x00\x00\x31\xd2\x52\x53\x6a\x02\x89\xe1\xcd\x80\x92\xb0\x66\x68\x7f\x01\x01\x01\x66\x68\x11\x5c\x43\x66\x53\x89\xe1\x6a\x10\x51\x52\x89\xe1\x43\xcd\x80\x83\xc4\x20\x89\xd0\xc3")

	sym_define_declare_global_function("socket_connect_new")
	emit(76, "\xb8\x66\x00\x00\x00\xbb\x01\x00\x00\x00\x31\xd2\x6a\x00\x6a\x01\x6a\x02\x89\xe1\xcd\x80\x83\xc4\x0c\x50\x50\xb8\x66\x00\x00\x00\x8b\x54\x24\x04\x83\xc4\x08\x68\x7f\x01\x01\x01\x66\x68\x11\x5c\xbb\x02\x00\x00\x00\x66\x53\x89\xe1\x6a\x10\x51\x52\x89\xe1\xbb\x03\x00\x00\x00\xcd\x80\x83\xc4\x14\x89\xd0\xc3")

	sym_define_declare_global_function("socket")
	emit(35, "\x8b\x44\x24\x04\x8b\x5c\x24\x08\x8b\x4c\x24\x0c\x50\x53\x51\x89\xe1\xb8\x66\x00\x00\x00\xbb\x01\x00\x00\x00\x31\xd2\xcd\x80\x83\xc4\x0c\xc3")

	sym_define_declare_global_function("connect")
	emit(55, "\x89\xe5\x8b\x55\x0c\x8b\x45\x08\x8b\x5d\x04\x0f\xc8\x50\x0f\xcb\xb1\x10\xd3\xfb\x66\x53\xbb\x02\x00\x00\x00\x66\x53\x89\xe1\x6a\x10\x51\x52\x89\xe1\xb8\x66\x00\x00\x00\xbb\x03\x00\x00\x00\xcd\x80\x83\xc4\x14\x89\xd0\xc3")

	sym_define_declare_global_function("setsockopt")
	emit(30, "\x8b\x54\x24\x04\x6a\x04\x54\x6a\x02\x6a\x01\x52\x89\xe1\xb8\x66\x00\x00\x00\xbb\x0e\x00\x00\x00\xcd\x80\x83\xc4\x14\xc3")

	sym_define_declare_global_function("bind")
	emit(45, "\x8b\x54\x24\x08\x8b\x5c\x24\x04\x0f\xcb\xb1\x10\xd3\xfb\x6a\x00\x66\x53\x66\x6a\x02\x89\xe1\x6a\x10\x51\x52\xb8\x66\x00\x00\x00\xbb\x02\x00\x00\x00\x89\xe1\xcd\x80\x83\xc4\x14\xc3")

	sym_define_declare_global_function("listen")
	emit(27, "\x8b\x54\x24\x04\x6a\x00\x52\x89\xe1\xb8\x66\x00\x00\x00\xbb\x04\x00\x00\x00\xcd\x80\x83\xc4\x08\x89\xd0\xc3")

	sym_define_declare_global_function("socket_accept")
	emit(29, "\x8b\x54\x24\x04\xb8\x66\x00\x00\x00\xbb\x05\x00\x00\x00\x6a\x00\x6a\x00\x52\x89\xe1\xcd\x80\x89\xc2\x83\xc4\x0c\xc3")

	# thread_i386.s
	sym_define_declare_global_function("thread_create")
	emit(54, "\x53\xe8\x15\x00\x00\x00\x8d\x88\xf8\xff\x3f\x00\x8f\x01\xbb\x00\x8f\x01\x80\xb8\x78\x00\x00\x00\xcd\x80\xc3")
	
	sym_define_declare_global_function("stack_create")
	emit(28, "\xbb\x00\x00\x00\x00\xb9\x00\x00\x40\x00\xba\x03\x00\x00\x00\xbe\x22\x01\x00\x00\xb8\xc0\x00\x00\x00\xcd\x80\xc3")

	# function_call(func_ptr)
	sym_define_declare_global_function("function_call")
	# mov eax,[esp+4]; jmp eax
	emit(6, "\x8b\x44\x24\x04\xff\xe0")

